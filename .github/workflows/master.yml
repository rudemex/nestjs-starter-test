name: "CI/CD"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: "⚙ Set up Node.js"
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: "✅ Checkout repository"
        uses: actions/checkout@v2

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "💾 Restore packages from cache"
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: "📦 Install packages"
        run: npm install

      - name: "🔦 Lint"
        run: npm run lint

      - name: "🔨 Build"
        run: npm run build

      - name: "👨‍💻 Run Test"
        run: npm run test
        env:
          NODE_ENV: 'test'

      - name: "📊 Upload coverage report to Codecov"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: "📊 SonarCloud Scan"
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=${GH_ORGA}
            -Dsonar.projectKey=${GH_ORGA}_${GH_REPO_NAME}
            -Dsonar.projectName=${GH_ORGA}_${GH_REPO_NAME}
            -Dsonar.projectVersion=1.0
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sources=./src
            -Dsonar.exclusions=**/*.bin,node_modules/**,test/**,**/__test__/**,**/__mocks__/**,src/main.ts
            -Dsonar.coverage.exclusions=node_modules/**,test/**,**/__test__/**,**/__mocks__/**,src/main.ts
            -Dsonar.testExecutionReportPaths=test-report.xml
            -Dsonar.typescript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
        env:
          GH_ORGA: ${{ github.repository_owner }}
          GH_REPO_NAME: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
